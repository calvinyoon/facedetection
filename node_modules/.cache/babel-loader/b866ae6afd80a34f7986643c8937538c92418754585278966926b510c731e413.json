{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calvi\\\\Desktop\\\\ZTM\\\\GitProject\\\\smartbrain2\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //THIS WORKS\nimport './App.css'; //THIS WORKS\nimport ParticlesBg from 'particles-bg'; //THIS WORKS\nimport Logo from './Components/Logo/Logo'; //THIS WORKS\nimport Navigation from './Components/Navigation/Navigation'; //THIS WORKS\nimport Signin from './Components/Signin/Signin'; //THIS WORKS\nimport Register from './Components/Register/Register'; //THIS WORKS\nimport URLinput from './Components/URLinput/URLinput'; //THIS WORKS\nimport Rank from './Components/Rank/Rank'; //THIS WORKS\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition'; //THIS WORKS\nimport Clarifai from 'clarifai'; //THIS WORKS\nimport 'tachyons'; //THIS WORKS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  //THIS WORKS\n  apiKey: 'af3372ee16b04b788518c454dd35f8f9' //THIS WORKS\n}); //THIS WORKS\n\nclass App extends Component {\n  //THIS WORKS\n  constructor() {\n    //THIS WORKS\n    super(); //THIS WORKS\n    // componentDidMount() {                 //THIS IS NEW AND IT WORKS\n    //   fetch('http://localhost:3001/')\n    //     .then(response => response.json())\n    //     .then(data => console.log('compdidmount', data))\n    // }\n    this.loadUser = data => {\n      //THIS IS NEW\n      console.log('data is', data); //THIS ISNT GOING TO WORK BC DATA IS \"SUCCESS\"\n      this.setState({\n        user: {\n          id: data.id,\n          name: 'John',\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = response => {\n      const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      console.log('oninputchange', event.target.value); //this works realtime\n      this.setState({\n        input: event.target.value\n      }); //THIS WORKS\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //THIS WORKS\n      console.log('onbutton', this.state.input);\n      app.models.predict({\n        id: 'face-detection',\n        name: 'face-detection',\n        version: '6dc7e46bc9124c5c8824be4822abe105',\n        type: 'visual-detector'\n      }, this.state.input) //HERE WE GO - SAME AS ZTM\n      // .then((response) => {\n      //     console.log(response);\n      //     this.displayFaceBox(this.calculateFaceLocation(response)); //HERE WE GO\n      //   })\n      .then(response => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n        }\n      }).catch(error => console.log(error));\n    };\n    this.onRouteChange = route => {\n      console.log('func route', route);\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      //THIS WORKS\n      input: '',\n      //THIS WORKS\n      imageUrl: '',\n      //THIS WORKS\n      box: {},\n      //THIS WORKS\n      route: 'signin',\n      //THIS WORKS\n\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    let componentToRender;\n    console.log('act route', this.state.route);\n    switch (this.state.route) {\n      case 'home':\n        componentToRender = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Rank, {\n            userName: this.state.user.name,\n            userEntries: this.state.user.entries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(URLinput, {\n            onInputChange: this.onInputChange,\n            onButtonSubmit: this.onButtonSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n            imageUrl: this.state.imageUrl,\n            box: this.state.box\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this);\n        break;\n      case 'signin':\n        componentToRender = /*#__PURE__*/_jsxDEV(Signin, {\n          onRouteChange: this.onRouteChange,\n          loadUser: this.loadUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this);\n        break;\n      case 'register':\n        componentToRender = /*#__PURE__*/_jsxDEV(Register, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this);\n        break;\n      default:\n        componentToRender = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"404\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        color: \"#ffffff\",\n        bg: {\n          position: \"fixed\",\n          left: 0,\n          top: 0\n        },\n        className: \"particles-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        route: this.state.route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), componentToRender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//const IMAGE_URL = 'https://samples.clarifai.com/face-det.jpg'\n\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","Logo","Navigation","Signin","Register","URLinput","Rank","FaceRecognition","Clarifai","jsxDEV","_jsxDEV","app","App","apiKey","constructor","loadUser","data","console","log","setState","user","id","name","email","password","entries","joined","calculateFaceLocation","response","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","target","value","input","onButtonSubmit","imageUrl","state","models","predict","version","type","then","fetch","method","headers","body","JSON","stringify","catch","error","onRouteChange","route","render","componentToRender","children","userName","userEntries","fileName","_jsxFileName","lineNumber","columnNumber","className","color","bg","position","left","top"],"sources":["C:/Users/calvi/Desktop/ZTM/GitProject/smartbrain2/src/App.js"],"sourcesContent":["import React, {Component} from 'react';         //THIS WORKS\nimport './App.css';                             //THIS WORKS\nimport ParticlesBg from 'particles-bg';         //THIS WORKS\nimport Logo from './Components/Logo/Logo';       //THIS WORKS\nimport Navigation from './Components/Navigation/Navigation';  //THIS WORKS\nimport Signin from './Components/Signin/Signin';              //THIS WORKS\nimport Register from './Components/Register/Register';        //THIS WORKS\nimport URLinput from './Components/URLinput/URLinput';        //THIS WORKS\nimport Rank from './Components/Rank/Rank';        //THIS WORKS\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';   //THIS WORKS\nimport Clarifai from 'clarifai';                  //THIS WORKS\nimport 'tachyons';                                //THIS WORKS\n\nconst app = new Clarifai.App({                    //THIS WORKS\n  apiKey: 'af3372ee16b04b788518c454dd35f8f9'      //THIS WORKS\n})                                                //THIS WORKS\n\nclass App extends Component {                 //THIS WORKS\n  constructor() {                             //THIS WORKS\n    super();                                  //THIS WORKS\n     this.state = {                           //THIS WORKS\n      input: '',                              //THIS WORKS\n      imageUrl: '',                              //THIS WORKS\n      box: {},                       //THIS WORKS\n      route: 'signin',                           //THIS WORKS\n\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n     }\n  }\n\n  // componentDidMount() {                 //THIS IS NEW AND IT WORKS\n  //   fetch('http://localhost:3001/')\n  //     .then(response => response.json())\n  //     .then(data => console.log('compdidmount', data))\n  // }\n\n  loadUser = (data) => {      //THIS IS NEW\n    console.log('data is', data)    //THIS ISNT GOING TO WORK BC DATA IS \"SUCCESS\"\n    this.setState({user: {\n      id: data.id,\n      name: 'John',\n      email: data.email,\n      password: data.password,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (response) => {\n    const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    console.log('oninputchange', event.target.value); //this works realtime\n    this.setState({input: event.target.value})  //THIS WORKS\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input}); //THIS WORKS\n    console.log('onbutton', this.state.input)\n      app.models\n         .predict(\n           {\n             id: 'face-detection',\n             name: 'face-detection',\n             version: '6dc7e46bc9124c5c8824be4822abe105',\n             type: 'visual-detector',\n           }, this.state.input) //HERE WE GO - SAME AS ZTM\n          // .then((response) => {\n          //     console.log(response);\n          //     this.displayFaceBox(this.calculateFaceLocation(response)); //HERE WE GO\n          //   })\n          .then(response => {\n            this.displayFaceBox(this.calculateFaceLocation(response));\n            if(response) {\n              fetch('http://localhost:3000/image', {\n                method: 'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                  id: this.state.user.id\n                })\n              })\n            }\n          })\n          .catch((error) => console.log(error))\n  }\n\n  onRouteChange = (route) => {\n    console.log('func route', route)  \n    this.setState({route: route})\n  }\n\n\n  render() {\n    let componentToRender;\n    console.log('act route', this.state.route)\n    switch(this.state.route) {\n    case 'home': componentToRender = (\n        <div>\n          <Rank userName={this.state.user.name} userEntries={this.state.user.entries} />\n          <URLinput onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n          <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/> \n        </div>\n      );\n      break;\n    case 'signin': componentToRender = (\n        <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n      )\n      break;\n    case 'register': componentToRender = (\n        <Register onRouteChange={this.onRouteChange} />\n      )\n      break;\n    default: componentToRender = (\n        <div>404</div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" color=\"#ffffff\" bg={{position: \"fixed\", left: 0, top: 0}} className=\"particles-bg\"/>\n        <Navigation onRouteChange={this.onRouteChange} route={this.state.route} />\n        { componentToRender }\n      </div>\n    );\n  }\n\n\n\n\n\n}\n\n\n\n//const IMAGE_URL = 'https://samples.clarifai.com/face-det.jpg'\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calvi\\\\Desktop\\\\ZTM\\\\GitProject\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\nimport Navigation from './Components/Navigation/Navigation';\nimport URLinput from './Components/URLinput/URLinput';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'af3372ee16b04b788518c454dd35f8f9'\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = response => {\n      const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict({\n        id: 'face-detection',\n        name: 'face-detection',\n        version: '6dc7e46bc9124c5c8824be4822abe105',\n        type: 'visual-detector'\n      }, this.state.input).then(response => this.calculateFaceLocation(response)).catch(error => console.log(error));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        color: \"#ffffff\",\n        bg: {\n          position: \"fixed\",\n          left: 0,\n          top: 0\n        },\n        className: \"particles-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(URLinput, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n//const IMAGE_URL = 'https://samples.clarifai.com/face-det.jpg'","map":{"version":3,"names":["React","Component","ParticlesBg","Navigation","URLinput","Rank","FaceRecognition","Clarifai","jsxDEV","_jsxDEV","app","App","apiKey","constructor","calculateFaceLocation","response","clarifaiFace","outputs","data","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","onInputChange","event","setState","input","target","value","onButtonSubmit","imageUrl","state","models","predict","id","name","version","type","then","catch","error","box","render","className","children","color","bg","position","left","top","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/calvi/Desktop/ZTM/GitProject/smartbrain/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\nimport Navigation from './Components/Navigation/Navigation';\nimport URLinput from './Components/URLinput/URLinput';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: 'af3372ee16b04b788518c454dd35f8f9'\n})\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  calculateFaceLocation = (response) => {\n    const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n        .predict(\n          {\n            id: 'face-detection',\n            name: 'face-detection',\n            version: '6dc7e46bc9124c5c8824be4822abe105',\n            type: 'visual-detector',\n          }, this.state.input)\n        .then((response) => this.calculateFaceLocation(response))\n        .catch(error => console.log(error))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" color=\"#ffffff\" bg={{position: \"fixed\", left: 0, top: 0}} className=\"particles-bg\"/>\n        <Navigation />\n        <Rank />\n        <URLinput onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//const IMAGE_URL = 'https://samples.clarifai.com/face-det.jpg'\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}